
// ==================================================
****We normally put any extra data needed to describe 
what's happening into the action.payload field.***** 
// ==================================================

This could be a number, a string, or an object with multiple fields inside.

// ============================
An example:
// ============================




Based on that list of things that can happen, we can create a 
list of actions that our application will use:

{type: 'todos/todoAdded', payload: todoText}
{type: 'todos/todoToggled', payload: todoId}
{type: 'todos/colorSelected, payload: {todoId, color}}
{type: 'todos/todoDeleted', payload: todoId}
{type: 'todos/allCompleted'}
{type: 'todos/completedCleared'}
{type: 'filters/statusFilterChanged', payload: filterValue}
{type: 'filters/colorFilterChanged', payload: {color, changeType}}

In this case, the actions primarily have a single extra piece of data apiece, 
so we can put that directly in the action.payload field.
 
We could have split the color filter behavior into two actions, 
one for "added" and one for "removed", 
but in this case we'll do it as one action with an extra field inside specifically
to show that we can have objects as an action payload.

Like the state data, actions should contain the smallest amount of information 
needed to describe what happened.